
version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/devdb
      - FRONTEND_URL=http://localhost:5173
    volumes:
      - ./backend:/app
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev 
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # evita sobrescribir node_modules dentro del contenedor
    environment:
      # La URL que el NAVEGADOR (fuera de Docker) usa para alcanzar el backend
      # a trav√©s del port mapping definido en el servicio 'backend'.
      - VITE_API_URL=http://localhost:8000
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=devdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d devdb"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge


#docker compose -f docker-compose.dev.yml up --build
